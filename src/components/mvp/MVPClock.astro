<div class="clock">
  <span class="time-text">Local time</span>
  <div id="current-time"></div>
  <div class="server-time-wrapper">
    <select id="timezone-select"></select>
  </div>
</div>

<style>
  .clock {
    margin-inline-start: auto;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    max-width: 300px;

    font-size: 1.5rem;
    text-align: center;

    color: hsl(var(--header));
  }

  .time-text {
    color: hsl(var(--white));
    font-size: 0.75rem;
    text-transform: uppercase;
    font-weight: 900;
    position: relative;
    bottom: -0.25rem;
  }

  .server-time-wrapper {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
    align-items: center;
    gap: 0.5rem;
  }

  #timezone-select {
    border-radius: 0.25rem;
    font-family: inherit;
    padding-block: 0.25rem;
    padding-inline-start: 0.5rem;
    border: none;
    font-size: 0.9rem;
  }

  #timezone-select:is(:hover, :focus-visible) {
    border: none;
    outline: 2px solid hsl(var(--important));
    outline-offset: 2px;
  }
</style>

<script lang="js">
// Get references to DOM elements
const timeText = document.querySelector(".time-text");
const select = document.querySelector("#timezone-select");
const currentTimeElement = document.querySelector("#current-time");

// Populate the timezone select element with options
for (let i = -12; i <= 14; i++) {
  const date = new Date();
  const offset = i * 60;
  date.setUTCMinutes(date.getUTCMinutes() + offset);
  const timeString = date.toUTCString().split(" ")[4];
  const hoursAndMinutes = timeString.slice(0, 5);

  const option = document.createElement("option");
  option.value = i;
  option.textContent = `GMT${i >= 0 ? "+" : ""}${i} (${hoursAndMinutes})`;
  select.appendChild(option);
}

// Retrieve the saved timezone from local storage and set the select element value
const savedTimezone = localStorage.getItem("timezone");
if (savedTimezone !== null) {
  select.value = savedTimezone;
} else {
  // If no saved timezone is found, set the select element value to the user's current timezone
  const date = new Date();
  const offset = date.getTimezoneOffset();
  const gmtOffset = -offset / 60;
  select.value = gmtOffset;
}

// Add an event listener to the select element to save the selected timezone to local storage and update the timeText element
select.addEventListener("change", () => {
    localStorage.setItem("timezone", select.value);
    if (select.value === "-7") {
        timeText.textContent = "Server time";
        localStorage.setItem("timeText", "Server time");
    } else if (select.value === localStorage.getItem("timezone")) {
        timeText.textContent = "Your time";
        localStorage.setItem("timeText", "Your time");
    } else {
        timeText.textContent = "Local time";
        localStorage.setItem("timeText", "Local time");
    }
});

// Define the clock function to update the current time element with the selected timezone
function clock() {
  const date = new Date();
  const offset = parseInt(select.value, 10) * 60;
  date.setUTCMinutes(date.getUTCMinutes() + offset);
  const timeString = date.toUTCString().split(" ")[4];
  currentTimeElement.textContent = timeString;
}

// Retrieve the saved value for the "server time", "your time" and "local time" options from local storage and update the timeText element
const savedTimeText = localStorage.getItem("timeText");
if (savedTimeText !== null) {
    timeText.textContent = savedTimeText;
}

// Call the clock function every second to update the current time element
setInterval(clock, 1000);
</script>
